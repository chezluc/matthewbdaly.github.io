<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: backbone.js | Matthew Daly's Blog]]></title>
  <link href="http://matthewdaly.co.uk/blog/categories/backbone-dot-js/atom.xml" rel="self"/>
  <link href="http://matthewdaly.co.uk/"/>
  <updated>2015-01-19T21:08:26+00:00</updated>
  <id>http://matthewdaly.co.uk/</id>
  <author>
    <name><![CDATA[Matthew Daly]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[First steps with Node.js]]></title>
    <link href="http://matthewdaly.co.uk/blog/2013/07/28/first-steps-with-node-dot-js/"/>
    <updated>2013-07-28T19:20:00+01:00</updated>
    <id>http://matthewdaly.co.uk/blog/2013/07/28/first-steps-with-node-dot-js</id>
    <content type="html"><![CDATA[<p>The idea of building an entire web app using nothing but JavaScript has always appealed to me. Despite its undoubted flaws, JavaScript is a powerful language, and chopping and changing between several different programming languages is never great. So I&rsquo;ve always wanted to check out Node.js.</p>

<p>Lately I&rsquo;ve been tinkering with Backbone.js a lot. As a web and mobile app developer, I&rsquo;ve seen the benefit of server-side MVC frameworks firsthand, and I&rsquo;ve also seen how bad a PhoneGap app can get without this kind of structure, so I&rsquo;ve been very eager for a while to get my head around a JavaScript framework. The first one I was able to really grok was Knockout.js, thanks to its wonderful tutorial, but Backbone.js seemed to have better mindshare, and support for routing, so I knuckled down and used it for a large personal project that is still under wraps, but I hope to make available once complete. Using Backbone has made my client-side code far more organised, and I plan to use it a lot in future.</p>

<p>I&rsquo;ve also wanted to get my head around a couple of the NoSQL databases. While the relational model is very often applicable, there are plenty of use cases where it isn&rsquo;t the best choice, especially for simple data, and MongoDB seemed to be an interesting alternative. So, I decided to have a tinker around with Node.js and Backbone today, and wound up building <a href="https://github.com/matthewbdaly/rabbitrabbitrabbit">a real-time guestbook application</a>. Let me know what you think, but please be gentle - this is my first ever Node.js or MongoDB application.</p>
]]></content>
  </entry>
  
</feed>
