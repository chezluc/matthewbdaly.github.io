<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: grunt | Matthew Daly's Blog]]></title>
  <link href="http://matthewdaly.co.uk/blog/categories/grunt/atom.xml" rel="self"/>
  <link href="http://matthewdaly.co.uk/"/>
  <updated>2014-12-31T17:39:11+00:00</updated>
  <id>http://matthewdaly.co.uk/</id>
  <author>
    <name><![CDATA[Matthew Daly]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[My first Grunt plugin]]></title>
    <link href="http://matthewdaly.co.uk/blog/2014/12/28/my-first-grunt-plugin/"/>
    <updated>2014-12-28T17:04:41+00:00</updated>
    <id>http://matthewdaly.co.uk/blog/2014/12/28/my-first-grunt-plugin</id>
    <content type="html"><![CDATA[<p>A while back, I mentioned that I&rsquo;d written a Yeoman generator for creating a flat HTML blog, called <a href="https://github.com/matthewbdaly/generator-simple-static-blog">generator-simple-static-blog</a>. For this, I&rsquo;d used the first Grunt plugin I could find for the purpose, which was <a href="https://github.com/testdouble/grunt-markdown-blog">grunt-markdown-blog</a>. This worked, but I wasn&rsquo;t really very happy with it.</p>

<p>The ideal Grunt plugin I had in mind was as follows:</p>

<ul>
<li>Used Handlebars for templating</li>
<li>Generated posts from Markdown files</li>
<li>Saved files in named folders with a single <code>index.html</code> file in each one (like Octopress does) so that no file extension is visible on a page</li>
<li>Generated index pages, rather than just showing the latest post as the first page</li>
</ul>


<p>Unfortunately, <code>grunt-markdown-blog</code> only fulfilled the second criteria, so it was never going to be something I stuck with long-term. However, I couldn&rsquo;t find anything else that would do the trick, so it looked like my only option was to write a suitable plugin myself.</p>

<p>I started a new Git repository a while back, but didn&rsquo;t make much progress. Then, on Christmas Eve, I suddenly got the urge to start working on this again, and in a matter of a few hours I&rsquo;d gotten a working Grunt plugin that ticked all of these boxes. I had to delay getting it integrated into the generator due to Christmas day, and then an unfortunate bout of flu, but I&rsquo;ve now published it as <a href="https://github.com/matthewbdaly/grunt-blogbuilder">grunt-blogbuilder</a> and amended the Yeoman generator to use it instead.</p>

<p>I&rsquo;m really pleased with the outcome, and while I&rsquo;m still not yet ready to migrate over to it from Octopress, it&rsquo;s a massive step forward, and building a Grunt plugin has been an interesting experience.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introducing generator-simple-static-blog]]></title>
    <link href="http://matthewdaly.co.uk/blog/2014/10/05/introducing-generator-simple-static-blog/"/>
    <updated>2014-10-05T19:56:46+01:00</updated>
    <id>http://matthewdaly.co.uk/blog/2014/10/05/introducing-generator-simple-static-blog</id>
    <content type="html"><![CDATA[<p>I&rsquo;m a big fan of static site generators. I ditched WordPress for Octopress over two years ago because it was free to host on GitHub Pages and much faster, had much better syntax highlighting, and I liked being able to write posts in Vim, and I&rsquo;ve never looked back since.</p>

<p>That said, Octopress is written in Ruby, a language I&rsquo;ve never been that keen on. Ideally I&rsquo;d prefer to use Python or JavaScript, but none of the solutions I&rsquo;ve found have been to my liking. Recently I&rsquo;ve been using Grunt and Yeoman to some extent, and I&rsquo;ve wondered about the idea of creating a Yeoman generator to build a static blogging engine. After discovering <code>grunt-markdown-blog</code>, I took the plunge and have built a simple blog generator called <a href="https://github.com/matthewbdaly/generator-simple-static-blog">generator-simple-static-blog</a>.</p>

<p>I&rsquo;ve published it to NPM, so feel free to check it out. It includes code highlighting with the Zenburn colour scheme by default (although highlight.js includes many other themes, so just switch to another one if you want), and it should be easy to edit the templates. I&rsquo;ve also included the ability to deploy automatically to GitHub Pages using Grunt.</p>

<p>I don&rsquo;t anticipate moving over to this from Octopress for the foreseeable future, but it&rsquo;s been an interesting project for the weekend.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My first Yeoman generator]]></title>
    <link href="http://matthewdaly.co.uk/blog/2014/01/25/my-first-yeoman-generator/"/>
    <updated>2014-01-25T11:38:40+00:00</updated>
    <id>http://matthewdaly.co.uk/blog/2014/01/25/my-first-yeoman-generator</id>
    <content type="html"><![CDATA[<p>At work I use the <a href="http://www.getskeleton.com/">Skeleton boilerplate</a> a lot - my boss, who handles most of the design work, likes it and generally uses it for his designs. I&rsquo;ve also been using <a href="http://gruntjs.com/">Grunt</a> a lot lately, so it was inevitable that I&rsquo;d probably start to look for a <a href="http://yeoman.io/">Yeoman</a> generator for working with it.</p>

<p>There was an existing Yeoman generator for Skeleton, but it didn&rsquo;t really do what I wanted. I wanted something that:</p>

<ul>
<li>Included jQuery and Modernizr</li>
<li>Automatically concatenates and minifies all the JavaScript and CSS</li>
<li>Will automatically rebuild on changes</li>
<li>Includes LiveReload and a development server</li>
<li>Includes automatic deployment via FTP</li>
</ul>


<p>After looking through the documentation for Yeoman, it was actually quick and easy to throw together my own generator and put it up. It&rsquo;s available <a href="https://npmjs.org/package/generator-skellington">here</a>, and the GitHub repository is <a href="https://github.com/matthewbdaly/generator-skellington">here</a>.</p>

<p>Future plans for it include:</p>

<ul>
<li>Adding auto-prefixing for CSS</li>
<li>Removing redundant CSS rules automatically</li>
<li>Possibly, alternate deployment methods</li>
</ul>


<p>Frustratingly, NPM seems to be playing up at present - it&rsquo;s not picking up the README file, and the Yeoman site isn&rsquo;t pulling it in. Any idea why, anyone?</p>
]]></content>
  </entry>
  
</feed>
