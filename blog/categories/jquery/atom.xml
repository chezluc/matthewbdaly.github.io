<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[jquery | Matthew Daly's Blog]]></title>
        <description><![CDATA[jquery | I'm a web developer in Norfolk. This is my blog...]]></description>
        <link>http://github.com/dylang/node-rss</link>
        <generator>RSS for Node</generator>
        <lastBuildDate>Mon, 02 Mar 2015 23:16:54 GMT</lastBuildDate>
        <item>
            <title><![CDATA[My first jQuery plugin]]></title>
            <description><![CDATA[<p>In my day job, I recently finished <a href="https://www.pagepooch.com/">PagePooch</a>, a tool for monitoring web pages for changes in content or prices. It’s a project that I’m immensely proud of, because it was my first big and largely solo project as a developer.</p>
<p>During the development of this, I initially created the user interface with jQuery Mobile, but later on added a desktop interface as well. During development of the desktop interface, I needed to recreate the functionality of the filter available for listviews in jQuery Mobile, and wound up creating a plugin for jQuery to do so.</p>
<p>I recently got permission to open-source this, as I figured the functionality was trivial enough that we couldn’t reasonably sell it, but by making it freely available, we’d maybe get some goodwill, and if we were really lucky, a few bugfixes and/or improvements.</p>
<p>It’s <a href="http://plugins.jquery.com/listfilter/">now available</a> via the jQuery plugin registry. Please let me know what you think, and feel free to fork it and hack on it as you see fit.</p>
]]></description>
            <link>http://matthewdaly.co.uk/blog/2013/04/21/my-first-jquery-plugin/</link>
            <guid isPermaLink="true">http://matthewdaly.co.uk/blog/2013/04/21/my-first-jquery-plugin/</guid>
            <pubDate>Sun, 21 Apr 2013 21:06:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Falling back to local copies of jQuery and jQuery Mobile]]></title>
            <description><![CDATA[<p>I use jQuery Mobile a lot at work, and it’s brilliant. For quickly knocking together a high-quality user interface that works well on mobile devices, it’s unbeatable.</p>
<p>Like many web developers, I favour using a CDN-hosted version of both jQuery and jQuery Mobile, because it makes it more likely that the user won’t have to download the appropriate files as their web browser has already cached them. However, by doing this you run the risk of your site being negatively affected if the CDN provider goes down for any length of time. So, I think it’s a good idea to have a fallback for both jQuery and jQuery Mobile.</p>
<p>I spent a while looking and finally managed to come up with a solution that works well, and borrows heavily from <a href="http://timjames.me/jquery-and-jquery-ui-fallbacks">a similar solution for jQuery UI by Tim James</a>. First of all, load the stylesheets and JavaScript files as usual:</p>
<pre><code class="hljs lang-html"><span class="hljs-tag">&lt;<span class="hljs-title">link</span> <span class="hljs-attribute">rel</span>=<span class="hljs-value">"stylesheet"</span> <span class="hljs-attribute">href</span>=<span class="hljs-value">"http://code.jquery.com/mobile/1.1.1/jquery.mobile.structure-1.1.1.min.css"</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-title">script</span> <span class="hljs-attribute">src</span>=<span class="hljs-value">"https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"</span>&gt;</span><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-title">script</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-title">script</span> <span class="hljs-attribute">src</span>=<span class="hljs-value">"http://code.jquery.com/mobile/1.1.1/jquery.mobile-1.1.1.min.js"</span>&gt;</span><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-title">script</span>&gt;</span>
</code></pre>
<p>Below this, place the following inside another set of script tags:</p>
<pre><code class="hljs lang-javascript"><span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> jQuery == <span class="hljs-string">'undefined'</span>)
{
    <span class="hljs-built_in">document</span>.write(<span class="hljs-built_in">unescape</span>(<span class="hljs-string">"%3Cscript src='http://path-to-jquery.min.js' type='text/javascript'%3E%3C/script%3E"</span>));
}
</code></pre>
<p> If jQuery is not defined, this will write another set of script tags that will load the local copy of jQuery. Now, inside a second set of script tags, place the following code:</p>
<pre><code class="hljs lang-javascript"><span class="hljs-keyword">if</span>(<span class="hljs-keyword">typeof</span> $.mobile == <span class="hljs-string">'undefined'</span>)
{
    <span class="hljs-built_in">document</span>.write(<span class="hljs-built_in">unescape</span>(<span class="hljs-string">"%3Cscript src='http://path-to-jquery-mobile.min.js' type='text/javascript'%3E%3C/script%3E"</span>));
}

$(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> </span>{
    <span class="hljs-keyword">if</span>($(<span class="hljs-string">'.ui-helper-hidden:first'</span>).is(<span class="hljs-string">':visible'</span>) === <span class="hljs-literal">true</span>){
        $(<span class="hljs-string">'&lt;link rel="stylesheet" type="text/css" href="http://path-to-jquery-mobile-structure.min.css" /&gt;'</span>).appendTo(<span class="hljs-string">'head'</span>);
    }
});
</code></pre>
<p>This won’t work if it’s placed in the same set of script tags as the code above, because it requires that jQuery be working already. The first part works similarly to the jQuery fallback - if jQuery Mobile is not defined, it writes a new script tag. The second relies on an element in the DOM with a class of ui-helper-hidden, which jQuery Mobile would hide by default if it were loaded. If it is visible, the jQuery Mobile structure CSS file has not been loaded and so a link to the local copy of the stylesheet is created.  Of course, this means you have to create this element, so add the following code to the very top of the body, directly under the opening body tag:</p>
<pre><code class="hljs lang-html">&lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"ui-helper-hidden"</span>&gt;&lt;/<span class="hljs-keyword">div</span>&gt;
</code></pre>
<p>If you download copies of the appropriate files and set the paths to them correctly, you should now be able to enjoy all the advantages of using a CDN for hosting jQuery and jQuery Mobile while also having the security of knowing that if the CDN goes down, your application will still work fine. Exactly the same approach will work with jQuery UI as well.</p>
]]></description>
            <link>http://matthewdaly.co.uk/blog/2012/08/13/falling-back-to-local-copies-of-jquery-and-jquery-mobile/</link>
            <guid isPermaLink="true">http://matthewdaly.co.uk/blog/2012/08/13/falling-back-to-local-copies-of-jquery-and-jquery-mobile/</guid>
            <pubDate>Mon, 13 Aug 2012 18:54:00 GMT</pubDate>
        </item>
    </channel>
</rss>